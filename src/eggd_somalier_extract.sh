#!/bin/bash
# eggd_somalier_extract 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://documentation.dnanexus.com/developer for tutorials on how
# to modify this file.

main() {

    echo "Value of input_file: '$input_file'"

    # The following line(s) use the dx command-line tool to download your file
    # inputs to the local file system using variable names for the filenames. To
    # recover the original filenames, you can use the output of "dx describe
    # "$variable" --name".


    dx download "$input_file" -o input_file


    echo "Load Reference genome and sites to extract"

    # Reference genome b37 (HS37D5.fa.gz)
    dx download project-Fkb6Gkj433GVVvj73J7x8KbV:file-F403K904F30y2vpVFqxB9kz7 
    # Indexed reference genome
    dx download project-Fkb6Gkj433GVVvj73J7x8KbV:file-F3zxG0Q4fXX9YFjP1v5jK9jf

    
    # Need to unzip..
    echo "Gunzip genome"

    gunzip HS37D5.fa.gz
    gunzip hs37d5.fasta-index.tar.gz


    # Now run static binary in resources/usr/bin
    somalier extract -d extracted/ --sites sites.hg38.nochr.vcf -f hs37d5.fa  $input_file
   
    # Upload the output folder
    
    echo "Uploading output files"

    output_file=$(dx upload extracted/*.somalier --brief)
    

    # The following line(s) use the utility dx-jobutil-add-output to format and
    # add output variables to your job's output as appropriate for the output
    # class.  Run "dx-jobutil-add-output -h" for more information on what it
    # does.

    dx-jobutil-add-output output_file "$output_file" --class=file
}
